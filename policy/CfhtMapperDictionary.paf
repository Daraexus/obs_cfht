#<?cfg paf dictionary ?>

target: LsstSimMapper

definitions: {
    rawTemplate: {
        type: string
        description: "The Python substitution template for the raw image pathnames."
        maxOccurs: 1
	default: "%(field)/raw/%(visit)d-f%(filter)s/s00/c%(ccd)02d-a%(amp)d.fits"
    }
    biasTemplate: {
        type: string
        description: "The Python substitution template for the bias image pathnames."
        maxOccurs: 1
	default: "bias/v%(runid)s/c%(ccd)02d-a%(amp)d.fits"
    }
    darkTemplate: {
        type: string
        description: "The Python substitution template for the dark image pathnames."
        maxOccurs: 1
	default: "dark/v%(runid)s/c%(ccd)02d-a%(amp)d.fits"
    }
    flatTemplate: {
        type: string
        description: "The Python substitution template for the flat image pathnames."
        maxOccurs: 1
	default: "flat/v%(runid)s-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }
    fringeTemplate: {
        type: string
        description: "The Python substitution template for the fringe image pathnames."
        maxOccurs: 1
	default: "fringe/v%(run)s-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }
    postISRTemplate: {
        type: string
        description: "The Python substitution template for the post-ISR amplifier image pathnames."
        maxOccurs: 1
	default: "postISR/v%(visit)d-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }
    postISRCCDTemplate: {
        type: string
        description: "The Python substitution template for the post-ISR CCD image pathnames."
        maxOccurs: 1
        default: "postISRCCD/v%(visit)d-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }
    visitimTemplate: {
        type: string
        description: "The Python substitution template for the CR-removed visit 
image pathnames."
        maxOccurs: 1
        default: "visitim/v%(visit)d-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }
    calexpTemplate: {
        type: string
        description: "The Python substitution template for the calibrated scienc
e exposure pathnames."
        maxOccurs: 1
        default: "calexp/v%(visit)d-f%(filter)s/c%(ccd)02d-a%(amp)d.fits"
    }

    root: {
        type: string
        description: "The pathname to the root directory for images."
        maxOccurs: 1
    }
    calibRoot: {
        type: string
        description: "The pathname to the calibration root directory."
        maxOccurs: 1
    }
    registryPath: {
        type: string
        description: "The pathname to the image registry.  Can be absolute, relative to the root, or relative to the current directory."
        maxOccurs: 1
        default: "registry.sqlite3"
    }
    skypixPolicy: {
        type: policy
        # description: "Subpolicy for configuring the sky pixelization."
        maxOccurs: 1
    }
    cameraDescription: {
        type: string
        description: "The pathname to the camera description (in PAF form).  Can be absolute or relative to the repository containing this dictionary."
        maxOccurs: 1
        default: "../megacam/description/Full_Megacam_geom.paf"
    }
    filterDescription: {
        type: string
        description: "The pathname to the filter description (in PAF form).  Can be absolute or relative to the repository containing this dictionary."
        default: "../megacam/description/MegacamFilters.paf"
    }
}
